services:
  webapp:
    environment:
      ENVIRONMENT: "production"
      DEBUG: "0"
    build:
      context: ./
      dockerfile: ./webapp/Dockerfile.prod
    volumes:
      - ./db:/app/webapp/db/:rw
      - staticfiles:/app/webapp/static/:rw
      - ./next_block_sync.txt:/app/webapp/next_block_sync.txt:ro
    expose:
      - 8000
    restart: always
    env_file:
      - ./.env

  nginx:
    image: nginx:latest
    ports:
      - 80:80
      - 443:443
    restart: always
    volumes:
      - ./proxy/nginx/conf_prod/:/etc/nginx/conf.d/:ro
      - certbot_certs:/etc/letsencrypt:ro
      - certbot_www:/var/www/certbot/:ro
      - staticfiles:/var/www/static/:ro
    depends_on:
      - webapp

  certbot:
    image: certbot/certbot:latest
    volumes:
      - certbot_certs:/etc/letsencrypt/:rw
      - certbot_www:/var/www/certbot/:rw
    depends_on:
      - nginx

  bet_manager:
    environment:
      ENVIRONMENT: "production"
    env_file:
      - ./.env
    build:
      context: ./
      dockerfile: ./bet_manager/Dockerfile.prod
    volumes:
      - ./db/:/app/db/:rw
      - ./bet_manager.log:/app/bet_manager.log:rw
      - ./next_block_sync.txt:/app/next_block_sync.txt:rw
    restart: always
    depends_on:
      - webapp

  telegram_bot:
    environment:
      WEBAPP_URL: "https://liquidity.chilipizdrick.xyz/"
      ENVIRONMENT: "production"
    env_file:
      - ./.env
    build:
      context: ./
      dockerfile: ./telegram_bot/Dockerfile.prod
    restart: always

volumes:
  staticfiles:
  certbot_www:
  certbot_certs:
